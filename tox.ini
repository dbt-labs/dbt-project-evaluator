[tox]
skipsdist = True
envlist = lint_all, testenv

[testenv]
passenv =
    # postgres env vars
    POSTGRES_HOST
    POSTGRES_USER
    DBT_ENV_SECRET_POSTGRES_PASS
    POSTGRES_PORT
    POSTGRES_DATABASE
    POSTGRES_SCHEMA
    # snowflake env vars
    SNOWFLAKE_ACCOUNT
    SNOWFLAKE_USER
    DBT_ENV_SECRET_SNOWFLAKE_PASS
    SNOWFLAKE_ROLE
    SNOWFLAKE_DATABASE
    SNOWFLAKE_WAREHOUSE
    SNOWFLAKE_SCHEMA
    # redshift
    REDSHIFT_HOST
    REDSHIFT_USER
    DBT_ENV_SECRET_REDSHIFT_PASS
    REDSHIFT_DATABASE
    REDSHIFT_SCHEMA
    REDSHIFT_PORT
    # bigquery
    BIGQUERY_PROJECT
    BIGQUERY_KEYFILE_JSON
    BIGQUERY_SCHEMA
    # databricks
    DATABRICKS_SCHEMA
    DATABRICKS_HOST
    DATABRICKS_HTTP_PATH
    DBT_ENV_SECRET_DATABRICKS_TOKEN

# Snowflake integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_snowflake]
allowlist_externals = 
    bash
skip_install = true
commands =
    bash ./run_tox_tests.sh snowflake

# Postgres integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_postgres]
allowlist_externals = 
    bash
skip_install = true
commands =
    bash ./run_tox_tests.sh postgres

# BigQuery integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_bigquery]
allowlist_externals = 
    bash
skip_install = true
commands =
    bash ./run_tox_tests.sh bigquery

# redshift integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_redshift]
allowlist_externals = 
    bash
skip_install = true
commands =
    bash ./run_tox_tests.sh redshift

# note that duckdb is not a supported dbt target for dbt Cloud testing
[testenv:dbt_integration_duckdb]
allowlist_externals = 
    bash
skip_install = true
commands =
    bash ./run_tox_tests.sh duckdb

[testenv:dbt_integration_databricks]
allowlist_externals = 
    bash
skip_install = true
commands =
    bash ./run_tox_tests.sh databricks